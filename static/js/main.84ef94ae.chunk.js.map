{"version":3,"sources":["index.js"],"names":["WamStats","props","this","subjArray","React","Component","WamReaderStats","value","split","map","splitted","year","sem","code","title","mark","console","log","length","WamReader","state","refreshCount","handleChange","bind","event","setState","target","onSubmit","handleSubmit","onChange","SubjTable","itemCount","items","ReqWam","Page","ReadToggleOn","ReqToggleOn","handleClickWR","handleClickRW","oldState","onClick","ReactDOM","render","document","getElementById"],"mappings":"4NAIMA,E,kDACJ,WAAYC,GAAO,uCACXA,G,0CAGR,WACoBC,KAAKD,MAAME,UAC7B,OACE,gCACE,+CACA,gCACE,+BACE,wCACA,4CACA,gDACA,iDACA,0D,GAhBWC,IAAMC,WAwBvBC,E,kDACJ,WAAYL,GAAO,uCACXA,G,0CAGR,WACE,IAEME,EAFQD,KAAKD,MAAMM,MACAC,MAAM,MACFC,KAAI,SAAAF,GAC/B,IAAMG,EAAWH,EAAMC,MAAM,MAQ7B,MAPgB,CACdG,KAAMD,EAAS,GACfE,IAAKF,EAAS,GACdG,KAAMH,EAAS,GACfI,MAAOJ,EAAS,GAChBK,KAAML,EAAS,OAInBM,QAAQC,IAAId,GACSA,EAAUe,OAE/B,OACE,cAAClB,EAAD,CAAUG,UAAWA,Q,GAvBEC,IAAMC,WA6B7Bc,E,kDACJ,WAAYlB,GAAO,IAAD,8BAChB,cAAMA,IACDmB,MAAQ,CAACb,MAAO,GAAIc,aAAc,GAEvC,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBAJJ,E,gDAOlB,SAAcC,GACZtB,KAAKuB,SAAU,CAAClB,MAAOiB,EAAME,OAAOnB,U,oBAGtC,WACE,IAAMA,EAAQL,KAAKkB,MAAMb,MAEzB,OACE,gCACE,uBAAMoB,SAAYzB,KAAK0B,aAAvB,UACE,qFAGA,uBACA,0BAAUrB,MAASL,KAAKkB,MAAMb,MAAOsB,SAAU3B,KAAKoB,kBAE5C,IAATf,GAAe,cAACD,EAAD,CAAgBC,MAAOA,W,GAxBvBH,IAAMC,W,IA2CxByB,E,kDACJ,WAAY7B,GAAO,IAAD,8BAChB,cAAMA,IAEDmB,MAAQ,CAACb,MAAO,GAAIwB,UAAW,GACpC,EAAKT,aAAe,EAAKA,aAAaC,KAAlB,gBAJJ,E,gDAOlB,SAAaC,GACXtB,KAAKuB,SAAS,CAAClB,MAAOiB,EAAME,OAAOnB,U,oBAGrC,WACgBL,KAAKkB,MAAMY,MACP9B,KAAKkB,MAAMW,UAE7B,OACE,gCACE,0BAAUF,SAAU3B,KAAKoB,eACzB,kCACE,gCACE,+BACE,6CACA,8CAGJ,oC,GA1BclB,IAAMC,WAmCxB4B,E,kDACF,WAAYhC,GAAO,IAAD,8BAChB,cAAMA,IAEDmB,MAAQ,CAACY,MAAO,IAHL,E,0CAMlB,WACE,OACE,cAACF,EAAD,CAAWE,MAAO9B,KAAKkB,MAAMY,Y,GAThB5B,IAAMC,WAcrB6B,E,kDACJ,WAAYjC,GAAO,IAAD,8BAChB,cAAMA,IACDmB,MAAQ,CAACe,cAAc,EAAOC,aAAa,GAEhD,EAAKC,cAAgB,EAAKA,cAAcd,KAAnB,gBACrB,EAAKe,cAAgB,EAAKA,cAAcf,KAAnB,gBALL,E,iDAQlB,WACErB,KAAKuB,UAAS,SAAAc,GAAQ,MAAK,CACzBJ,cAAeI,EAASJ,mB,2BAI5B,WACEjC,KAAKuB,UAAS,SAAAc,GAAQ,MAAK,CACzBH,aAAcG,EAASH,kB,oBAI3B,WACE,OACE,gCACE,uDAEA,gCACA,wBAAQI,QAAStC,KAAKmC,cAAtB,uBACCnC,KAAKkB,MAAMe,cAAgB,cAAChB,EAAD,OAG5B,gCACA,wBAAQqB,QAAStC,KAAKoC,cAAtB,oBACCpC,KAAKkB,MAAMgB,aAAe,cAACH,EAAD,c,GAjChB7B,IAAMC,WA2CzBoC,IAASC,OACP,cAACR,EAAD,IACAS,SAASC,eAAe,W","file":"static/js/main.84ef94ae.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nclass WamStats extends React.Component {\n  constructor(props){\n    super(props);\n  }\n\n  render(){\n    const subjArray = this.props.subjArray;\n    return(\n      <div>\n        <h3>You entered: </h3>\n        <table>\n          <tr>\n            <th> Year </th>\n            <th> Semester </th>\n            <th> Subject Code </th>\n            <th> Subject Title </th>\n            <th> Final Mark </th>\n          </tr>\n        </table>\n      </div>\n    );\n  }\n}\n\nclass WamReaderStats extends React.Component {\n  constructor(props){\n    super(props);\n  }\n\n  render(){\n    const value = this.props.value;\n    const byRowArray = value.split(\"\\n\");\n    const subjArray = byRowArray.map(value => {\n      const splitted = value.split(\"\\t\");\n      const subject = {\n        year: splitted[0],\n        sem: splitted[1],\n        code: splitted[2],\n        title: splitted[3],\n        mark: splitted[5],\n      };\n      return subject;\n    });\n    console.log(subjArray);\n    const subjectCount = subjArray.length;\n\n    return(\n      <WamStats subjArray={subjArray}/>\n    );\n  }\n}\n\n\nclass WamReader extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {value: '', refreshCount: 0};\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange (event){\n    this.setState ({value: event.target.value});\n  }\n\n  render(){\n    const value = this.state.value;\n\n    return(\n      <div>\n        <form onSubmit = {this.handleSubmit}>\n          <label>\n          Copy-Paste your results page into this text-box.\n          </label>\n          <br/>\n          <textarea value = {this.state.value} onChange={this.handleChange} />\n        </form>\n        {value != \"\" && <WamReaderStats value={value}/>}\n      </div>\n    );\n  }\n}\n\nfunction sayHello (number){\n  const elements = []\n  for (let i = 0; i < number; i++){\n    elements.push(<h1 key={i}>hello</h1>);\n  }\n  return (\n    <div>\n      {elements}\n    </div>\n  )\n}\n\n\nclass SubjTable extends React.Component {\n  constructor(props){\n    super(props);\n\n    this.state = {value: \"\", itemCount: 1};\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event){\n    this.setState({value: event.target.value});\n  }\n\n  render(){\n    const items = this.state.items;\n    const itemCount = this.state.itemCount;\n\n    return (\n      <div>\n        <textarea onChange={this.handleChange}/>\n        <table>\n          <thead>\n            <tr>\n              <th> Weighting </th>\n              <th> Grade </th>\n            </tr>\n          </thead>\n          <tbody>\n\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nclass ReqWam extends React.Component {\n    constructor(props){\n      super(props);\n\n      this.state = {items: []};\n    }\n\n    render(){\n      return(\n        <SubjTable items={this.state.items} />\n      );\n    }\n}\n\nclass Page extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {ReadToggleOn: false, ReqToggleOn: false};\n\n    this.handleClickWR = this.handleClickWR.bind(this);\n    this.handleClickRW = this.handleClickRW.bind(this);\n  }\n\n  handleClickWR(){\n    this.setState(oldState => ({\n      ReadToggleOn: !oldState.ReadToggleOn\n    }))\n  }\n\n  handleClickRW(){\n    this.setState(oldState => ({\n      ReqToggleOn: !oldState.ReqToggleOn\n    }))\n  }\n\n  render(){\n    return(\n      <div>\n        <h1>Sample Wam Calculator</h1>\n\n        <div>\n        <button onClick={this.handleClickWR}>WamReader</button>\n        {this.state.ReadToggleOn && <WamReader />}\n        </div>\n\n        <div>\n        <button onClick={this.handleClickRW}>ReqWam</button>\n        {this.state.ReqToggleOn && <ReqWam />}\n        </div>\n      </div>\n    );\n  }\n\n}\n\n\n\nReactDOM.render(\n  <Page />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}