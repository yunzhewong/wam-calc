{"version":3,"sources":["index.js"],"names":["Table","props","subjArray","this","class","map","value","key","color","console","log","wamnesty","year","sem","code","title","mark","credit","bgcolor","React","Component","Average","total","totalCredit","exempt","exemptCredit","nonExempt","nonExemptCredit","i","length","parseFloat","txt","n","desc","Math","round","WamReaderStats","split","splitted","slice","WamReader","state","refreshCount","handleChange","bind","event","setState","target","element","onSubmit","handleSubmit","onChange","rows","cols","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c9a15691.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nclass Table extends React.Component {\n  constructor(props){\n    super(props);\n  }\n\n  render(){\n    const subjArray = this.props.subjArray;\n    return(\n      <div>\n        <h3>You entered: </h3>\n        <table class = \"center\">\n          <thead>\n            <tr>\n              <th key=\"year\"> Year </th>\n              <th key=\"sem\"> Semester </th>\n              <th key=\"code\"> Subject Code </th>\n              <th key=\"title\"> Subject Title </th>\n              <th key=\"mark\"> Final Mark </th>\n              <th key=\"credit\"> Credit Points </th>\n              <th key=\"wamnesty\"> Exempt </th>\n            </tr>\n          </thead>\n          <tbody>\n            {subjArray.map((value, key) => {\n              var color = \"red\";\n              console.log(value.wamnesty);\n              if (value.wamnesty) {\n                color = \"green\"\n                console.log(\"hello\");\n              }\n              return (\n                <tr>\n                  <td key={7*key}>{value.year}</td>\n                  <td key={7*key+1}>{value.sem}</td>\n                  <td key={7*key+2}>{value.code}</td>\n                  <td key={7*key+3}>{value.title}</td>\n                  <td key={7*key+4}>{value.mark}</td>\n                  <td key={7*key+5}>{value.credit}</td>\n                  <td key={7*key+6} bgcolor={color}></td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nclass Average extends React.Component {\n  constructor(props){\n    super(props);\n  }\n\n  render(){\n    const subjArray = this.props.subjArray;\n    var total = 0;\n    var totalCredit = 0;\n\n    var exempt = 0;\n    var exemptCredit = 0;\n\n    var nonExempt = 0;\n    var nonExemptCredit = 0;\n    for (let i = 0; i < subjArray.length; i++){\n      const credit = parseFloat(subjArray[i].credit);\n      total += parseFloat(subjArray[i].mark) * credit;\n      totalCredit += credit;\n\n      if (subjArray[i].wamnesty) {\n        exempt += parseFloat(subjArray[i].mark) * credit;\n        exemptCredit += credit;\n      } else {\n        nonExempt += parseFloat(subjArray[i].mark) * credit;\n        nonExemptCredit += credit;\n      }\n\n    }\n    total /= (totalCredit);\n    exempt /= exemptCredit;\n    nonExempt /= nonExemptCredit;\n\n    var txt = \"\";\n    var n = \"n\";\n    var desc = \"\";\n    if (total >= 80){\n      txt = \"H1\";\n      desc = \"First Class Honours\";\n    } else if (total >= 75){\n      txt = \"H2A\";\n      desc = \"Second Class Honours Division A\";\n    } else if (total >= 70){\n      txt = \"H2B\";\n      desc = \"Second Class Honours Division B\";\n    } else if (total >= 65){\n      txt = \"H3\";\n      desc = \"Third Class Honours\";\n    } else if (total >= 50){\n      n = \"\";\n      txt = \"P\";\n      desc = \"Pass\";\n    } else {\n      txt = \"N\";\n      desc = \"Fail\";\n    }\n    return (\n      <div>\n        <h1>Your Exempt Weighted Average Mark is {Math.round(100*exempt)/100}</h1>\n        <h1>Your Non-Exempt Weighted Average Mark is {Math.round(100*nonExempt)/100}</h1>\n        <h1>Your Weighted Average Mark is {Math.round(100*total)/100}</h1>\n        <h2>This counts as a{n} {txt}: {desc}</h2>\n      </div>\n    );\n  }\n}\n\nclass WamReaderStats extends React.Component {\n  constructor(props){\n    super(props);\n  }\n\n  render(){\n    const value = this.props.value;\n    const byRowArray = value.split(\"\\n\");\n    const subjArray = byRowArray.map(value => {\n      const splitted = value.split(\"\\t\");\n      var wamnesty = 0;\n      if (splitted[6].slice(-1) == \"^\"){\n        wamnesty = 1;\n      }\n\n      const subject = {\n        year: splitted[0],\n        sem: splitted[1],\n        code: splitted[2],\n        title: splitted[3],\n        mark: splitted[5],\n        credit: splitted[8],\n        wamnesty: wamnesty\n      };\n      return subject;\n    });\n    const subjectCount = subjArray.length;\n\n    return(\n      <div class = \"center\">\n        <Table subjArray={subjArray}/>\n        <Average subjArray={subjArray}/>\n      </div>\n    );\n  }\n}\n\n\nclass WamReader extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {value: '', refreshCount: 0};\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange (event){\n    this.setState ({value: event.target.value});\n  }\n\n  render(){\n    const value = this.state.value;\n    var element = <h3> Your results will appear here: </h3>;\n\n    if (value !== \"\"){\n      element = <WamReaderStats value={value}/>;\n    }\n    return(\n      <div class = \"center\">\n        <form onSubmit = {this.handleSubmit}>\n          <label>\n          Copy-Paste your results page table into this text-box.\n          </label>\n          <br/>\n          <textarea\n            value = {this.state.value}\n            onChange={this.handleChange}\n            rows = \"24\"\n            cols = \"150\"\n            />\n        </form>\n        {element}\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <WamReader />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}