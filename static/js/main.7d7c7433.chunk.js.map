{"version":3,"sources":["index.js"],"names":["WamReaderStats","props","value","this","subjectCount","split","map","splitted","length","React","Component","WamReader","state","refreshCount","handleChange","bind","event","setState","target","onSubmit","handleSubmit","onChange","Page","ReadToggleOn","ReqToggleOn","handleClickWR","handleClickRW","oldState","onClick","ReactDOM","render","document","getElementById"],"mappings":"4NAIMA,E,kDACJ,WAAYC,GAAO,uCACXA,G,0CAGR,WACE,IAAMC,EAAQC,KAAKF,MAAMC,MAYnBE,EAXaF,EAAMG,MAAM,MACFC,KAAI,SAAAJ,GAC/B,IAAMK,EAAWL,EAAMG,MAAM,MAErBE,EAAS,GACVA,EAAS,GACRA,EAAS,GACRA,EAAS,GACVA,EAAS,MAGYC,OAE/B,OACE,gCACE,+CACA,4BAAIN,IACJ,4BAAIE,W,GAxBiBK,IAAMC,WA+B7BC,E,kDACJ,WAAYV,GAAO,IAAD,8BAChB,cAAMA,IACDW,MAAQ,CAACV,MAAO,GAAIW,aAAc,GAEvC,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBAJJ,E,gDAOlB,SAAcC,GACZb,KAAKc,SAAU,CAACf,MAAOc,EAAME,OAAOhB,U,oBAGtC,WACE,IAAMA,EAAQC,KAAKS,MAAMV,MAEzB,OACE,gCACE,uBAAMiB,SAAYhB,KAAKiB,aAAvB,UACE,qFAGA,uBACA,0BAAUlB,MAASC,KAAKS,MAAMV,MAAOmB,SAAUlB,KAAKW,kBAE5C,IAATZ,GAAe,cAACF,EAAD,CAAgBE,MAAOA,W,GAxBvBO,IAAMC,WAiCxBY,E,kDACJ,WAAYrB,GAAO,IAAD,8BAChB,cAAMA,IACDW,MAAQ,CAACW,cAAc,EAAOC,aAAa,GAEhD,EAAKC,cAAgB,EAAKA,cAAcV,KAAnB,gBACrB,EAAKW,cAAgB,EAAKA,cAAcX,KAAnB,gBALL,E,iDAQlB,WACEZ,KAAKc,UAAS,SAAAU,GAAQ,MAAK,CACzBJ,cAAeI,EAASJ,mB,2BAI5B,WACEpB,KAAKc,UAAS,SAAAU,GAAQ,MAAK,CACzBH,aAAcG,EAASH,kB,oBAI3B,WACE,OACE,gCACE,uDAEA,gCACA,wBAAQI,QAASzB,KAAKsB,cAAtB,uBACCtB,KAAKS,MAAMW,cAAgB,cAACZ,EAAD,OAG5B,gCACA,wBAAQiB,QAASzB,KAAKuB,cAAtB,oBACCvB,KAAKS,MAAMY,aAAe,0D,GAjChBf,IAAMC,WA2CzBmB,IAASC,OACP,cAACR,EAAD,IACAS,SAASC,eAAe,W","file":"static/js/main.7d7c7433.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nclass WamReaderStats extends React.Component {\n  constructor(props){\n    super(props);\n  }\n\n  render(){\n    const value = this.props.value;\n    const byRowArray = value.split(\"\\n\");\n    const subjArray = byRowArray.map(value => {\n      const splitted = value.split(\"\\t\");\n      const subject = {\n        year: splitted[0],\n        sem: splitted[1],\n        code: splitted[2],\n        title: splitted[3],\n        mark: splitted[5],\n      }\n    });\n    const subjectCount = subjArray.length;\n\n    return(\n      <div>\n        <h3>You entered: </h3>\n        <p>{value}</p>\n        <p>{subjectCount}</p>\n      </div>\n    );\n  }\n}\n\n\nclass WamReader extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {value: '', refreshCount: 0};\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange (event){\n    this.setState ({value: event.target.value});\n  }\n\n  render(){\n    const value = this.state.value;\n\n    return(\n      <div>\n        <form onSubmit = {this.handleSubmit}>\n          <label>\n          Copy-Paste your results page into this text-box.\n          </label>\n          <br/>\n          <textarea value = {this.state.value} onChange={this.handleChange} />\n        </form>\n        {value != \"\" && <WamReaderStats value={value}/>}\n      </div>\n    );\n  }\n}\n\n\n\n\nclass Page extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {ReadToggleOn: false, ReqToggleOn: false}\n\n    this.handleClickWR = this.handleClickWR.bind(this);\n    this.handleClickRW = this.handleClickRW.bind(this);\n  }\n\n  handleClickWR(){\n    this.setState(oldState => ({\n      ReadToggleOn: !oldState.ReadToggleOn\n    }))\n  }\n\n  handleClickRW(){\n    this.setState(oldState => ({\n      ReqToggleOn: !oldState.ReqToggleOn\n    }))\n  }\n\n  render(){\n    return(\n      <div>\n        <h1>Sample Wam Calculator</h1>\n\n        <div>\n        <button onClick={this.handleClickWR}>WamReader</button>\n        {this.state.ReadToggleOn && <WamReader />}\n        </div>\n\n        <div>\n        <button onClick={this.handleClickRW}>ReqWam</button>\n        {this.state.ReqToggleOn && <h2>Req Calc Ready</h2>}\n        </div>\n      </div>\n    );\n  }\n\n}\n\n\n\nReactDOM.render(\n  <Page />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}